
@{
    ViewBag.Title = "Index";
}

<h2>Wykres słupkowy</h2>

<!-- Sekcja do generowania wykresu -->
<script>
	window.onload = function () {

		var chart = new CanvasJS.Chart("chartContainer", {
		animationEnabled: true,
		title:{
			text: "Wykres słupkowy"
		},
		axisY: {
			title: "Y",
			includeZero: true
		},
		legend: {
			cursor:"pointer",
			itemclick : toggleDataSeries
		},
		toolTip: {
			shared: true,
			content: toolTipFormatter
		},
		data: [{
			type: "bar",
			showInLegend: true,
			name: "Seria1",
			color: "red",
			dataPoints: @Html.Raw(ViewBag.DataBarsRed)
		},
		{
			type: "bar",
			showInLegend: true,
			name: "Seria2",
			color: "green",
			dataPoints: @Html.Raw(ViewBag.DataBarsGreen)
		},
		{
			type: "bar",
			showInLegend: true,
			name: "Seria3",
			color: "blue",
			dataPoints: @Html.Raw(ViewBag.DataBarsBlue)
			}]
		});
			chart.render();

        function toolTipFormatter(e) {
            var str = "";
            var total = 0;
            var str3;
            var str2;
            for (var i = 0; i < e.entries.length; i++) {
                var str1 = "<span style= \"color:" + e.entries[i].dataSeries.color + "\">" + e.entries[i].dataSeries.name + "</span>: <strong>" + e.entries[i].dataPoint.y + "</strong> <br/>";
                total = e.entries[i].dataPoint.y + total;
                str = str.concat(str1);
            }
            str2 = "<strong>" + e.entries[0].dataPoint.label + "</strong> <br/>";
            str3 = "<span style = \"color:Tomato\">Total: </span><strong>" + total + "</strong><br/>";
            return (str2.concat(str)).concat(str3);
        }

        function toggleDataSeries(e) {
            if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
                e.dataSeries.visible = false;
            }
            else {
                e.dataSeries.visible = true;
            }
            chart.render();
        }

}
</script>

<div id="chartContainer" style="height: 370px; width: 100%;"></div>

