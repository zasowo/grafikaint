
@{
    ViewBag.Title = "Index";
}

<h2>Wykres kombinowany</h2>

<!-- Sekcja do generowania wykresu -->
<script>
    window.onload = function () {
        var data1 = @Html.Raw(ViewBag.DateData1);
        var data2 = @Html.Raw(ViewBag.DateData2);
        var data3 = @Html.Raw(ViewBag.DateData3);

        for (var i = 0; i < data1.length; i++) {
            data1[i].x = new Date(Date.parse(data1[i].x));
            data2[i].x = new Date(Date.parse(data2[i].x));
            data3[i].x = new Date(Date.parse(data3[i].x));
        }

        var chart = new CanvasJS.Chart("chartContainer", {
    	    animationEnabled: true,
    	    theme: "light2",
    	    title: {
    		    text: "Wykres Kombinowany"
    	    },
    	    axisX: {
    		    valueFormatString: "MMM"
    	    },
    	    axisY: {
    		    prefix: "$",
    		    labelFormatter: addSymbols
    	    },
    	    toolTip: {
    		    shared: true
    	    },
    	    legend: {
    		    cursor: "pointer",
    		    itemclick: toggleDataSeries
    	    },
    	    data: [
    	    {
    		    type: "column",
    		    name: "Actual Sales",
    		    showInLegend: true,
    		    xValueFormatString: "MMMM YYYY",
    		    yValueFormatString: "$#,##0",
                    dataPoints: data1
    	    },
    	    {
    		    type: "line",
    		    name: "Expected Sales",
    		    showInLegend: true,
    		    yValueFormatString: "$#,##0",
    		    dataPoints: data2
    	    },
    	    {
    		    type: "area",
    		    name: "Profit",
    		    markerBorderColor: "white",
    		    markerBorderThickness: 2,
    		    showInLegend: true,
    		    yValueFormatString: "$#,##0",
    		    dataPoints: data3
    	    }]
        });
        chart.render();

        function addSymbols(e) {
    	    var suffixes = ["", "K", "M", "B"];
    	    var order = Math.max(Math.floor(Math.log(Math.abs(e.value)) / Math.log(1000)), 0);

    	    if(order > suffixes.length - 1)
    		    order = suffixes.length - 1;

    	    var suffix = suffixes[order];
    	    return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;
        }

        function toggleDataSeries(e) {
    	    if (typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
    		    e.dataSeries.visible = false;
    	    } else {
    		    e.dataSeries.visible = true;
    	    }
    	    e.chart.render();
        }

}
</script>

<div id="chartContainer" style="height: 370px; width: 100%;"></div>

